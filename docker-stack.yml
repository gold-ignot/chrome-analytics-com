services:
  chrome-analytics-app:
    image: ${DOCKER_IMAGE_NAME}
    networks:
      - traefik-public
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOSTNAME=0.0.0.0
    deploy:
      mode: replicated
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.2'
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 30s
        failure_action: rollback
        order: start-first
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.http.routers.chrome-analytics-app.rule=Host(`chrome-analytics.com`)
        - traefik.http.routers.chrome-analytics-app.entrypoints=web
        - traefik.http.services.chrome-analytics-app.loadbalancer.server.port=3000
        - traefik.http.routers.chrome-analytics-app.middlewares=security-headers
        - traefik.http.middlewares.security-headers.headers.frameDeny=true
        - traefik.http.middlewares.security-headers.headers.contentTypeNosniff=true
        - traefik.http.middlewares.security-headers.headers.browserXSSFilter=true
        - traefik.http.middlewares.security-headers.headers.stsSeconds=31536000
        - traefik.http.middlewares.security-headers.headers.stsIncludeSubdomains=true
        - traefik.http.middlewares.security-headers.headers.stsPreload=true
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  traefik-public:
    external: true
    name: traefik-public